{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/lucas/Projetos/cursos/gobarber v2/mobile/src/pages/SignIn/index.tsx\";\n\nimport React, { useCallback, useRef } from 'react';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { Form } from '@unform/mobile';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { Container, Title, ForgotPassword, ForgotPasswordText, CreateAccountButton, CreateAccountText } from \"./styles\";\nimport logoImg from \"../../assets/logo.png\";\n\nvar SignIn = function SignIn() {\n  var navigation = useNavigation();\n  var formRef = useRef(null);\n  var passwordInputRef = useRef(null);\n  var handleSignIn = useCallback(function (data) {\n    console.log(data);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Fa\\xE7a seu logon\")), React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    name: \"email\",\n    icon: \"mail\",\n    placeholder: \"E-mail\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _passwordInputRef$cur;\n\n      (_passwordInputRef$cur = passwordInputRef.current) == null ? void 0 : _passwordInputRef$cur.focus();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    ref: passwordInputRef,\n    name: \"password\",\n    icon: \"lock\",\n    placeholder: \"Senha\",\n    secureTextEntry: true,\n    returnKeyType: \"send\",\n    onSubmitEditing: function onSubmitEditing() {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) == null ? void 0 : _formRef$current.submitForm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  })), React.createElement(Button, {\n    onPress: function onPress() {\n      var _formRef$current2;\n\n      (_formRef$current2 = formRef.current) == null ? void 0 : _formRef$current2.submitForm();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Entrar\"), React.createElement(ForgotPassword, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, React.createElement(ForgotPasswordText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Esqueci minha senha\"))))), React.createElement(CreateAccountButton, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: \"log-in\",\n    size: 20,\n    color: \"#ff9000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), React.createElement(CreateAccountText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Criar uma conta\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/lucas/Projetos/cursos/gobarber v2/mobile/src/pages/SignIn/index.tsx"],"names":["React","useCallback","useRef","Feather","Icon","useNavigation","Form","Input","Button","Container","Title","ForgotPassword","ForgotPasswordText","CreateAccountButton","CreateAccountText","logoImg","SignIn","navigation","formRef","passwordInputRef","handleSignIn","data","console","log","flex","Platform","OS","undefined","current","focus","submitForm","navigate"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/mobile';\nimport {\n  View,\n  ScrollView,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  TextInput,\n} from 'react-native';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport {\n  Container,\n  Title,\n  ForgotPassword,\n  ForgotPasswordText,\n  CreateAccountButton,\n  CreateAccountText,\n} from './styles';\n\nimport logoImg from '../../assets/logo.png';\n\nconst SignIn: React.FC = () => {\n  const navigation = useNavigation();\n  const formRef = useRef<FormHandles>(null);\n  const passwordInputRef = useRef<TextInput>(null);\n\n  const handleSignIn = useCallback((data: object) => {\n    console.log(data);\n  }, []);\n\n  return (\n    <>\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        enabled\n      >\n        <ScrollView\n          keyboardShouldPersistTaps=\"handled\"\n          contentContainerStyle={{ flex: 1 }}\n        >\n          <Container>\n            <Image source={logoImg} />\n\n            <View>\n              <Title>Fa√ßa seu logon</Title>\n            </View>\n\n            <Form ref={formRef} onSubmit={handleSignIn}>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                keyboardType=\"email-address\"\n                name=\"email\"\n                icon=\"mail\"\n                placeholder=\"E-mail\"\n                returnKeyType=\"next\"\n                onSubmitEditing={() => {\n                  passwordInputRef.current?.focus();\n                }}\n              />\n              <Input\n                ref={passwordInputRef}\n                name=\"password\"\n                icon=\"lock\"\n                placeholder=\"Senha\"\n                secureTextEntry\n                returnKeyType=\"send\"\n                onSubmitEditing={() => {\n                  formRef.current?.submitForm();\n                }}\n              />\n            </Form>\n            <Button\n              onPress={() => {\n                formRef.current?.submitForm();\n              }}\n            >\n              Entrar\n            </Button>\n\n            <ForgotPassword>\n              <ForgotPasswordText>Esqueci minha senha</ForgotPasswordText>\n            </ForgotPassword>\n          </Container>\n        </ScrollView>\n      </KeyboardAvoidingView>\n\n      <CreateAccountButton onPress={() => navigation.navigate('SignUp')}>\n        <Icon name=\"log-in\" size={20} color=\"#ff9000\" />\n        <CreateAccountText>Criar uma conta</CreateAccountText>\n      </CreateAccountButton>\n    </>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}